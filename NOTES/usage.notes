fixpath

    This tool will fix directory trees and filenames that contain
    chars with awkward/bad/non-portable chars.

    Sometimes one encounters filenames that contain spaces, tabs,
    newlines, leading -'s, #'s, quotes, non-printable chars, etc.
    Such files are sometimes awkward to types and manipulate on
    the command line.  The fixpath tool will rename those files to
    'nicer' names.

    Usage:

	fixpath [-n] [-v] [-s] [-i] dir ...

	-n      do not rename anything
	-v      verbose / debug
	-s      strict POSIX chars only
	-i      ignore %'s if followed by 2 hex chars

	dir	a directory under which fixpath will operate

    When fixpath encounters an awkward char in a filename, it
    renames that file using the %xx notation where 'xx' is the
    hex value of the original character.  See man ASCII for a
    complete list.

    For example a directory named "Program Files" will be renamed
    Program%20Files by fixpath because ASCII space is hex 0x20.

    By default, fixpath silently fixes files under dir.  Use the
    -v option:

	fixpath -v some_dir

    to watch what is is doing.

    You can look first, but NOT modify by giving the -n option.
    Of course, to see anything you also need the -v option.

    To see what awkward chars might exist under a directory tree
    but NOT modify/rename anything (look but do not touch mode):

	fixpath -n -v some_dir

    Technically the % character is not part of the official
    portable character set.  However if a tree has been
    processed by fixpath, it will contain names with %'s in them.
    Running fixpath over that SAME tree again will convert all
    %'s into %25 renaming the already renamed Program%20Files
    into Program%2520Files.  To avoid this, use the -i (ignore
    %'s if followed by 2 hex chars).  So:

	fixpath -v -i some_dir

    will fix all but %'s and:

	fixpath -n -v -i some_dir

    will check (but not fix) all awkward chars except %'s
    (followed by 2 hex chars).

    Finally, the -s forces one into a strict POSIX char set.
    The POSIX portable char set is more restrictive than the
    common char set.  So:

	fixpath -v -s some_dir

    will be really strict about awkward chars.	Generally the
    -s strict POSIX char set mode it not needed.
